{"version":3,"sources":["components/Addcategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["Addcategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,OAQlB,SACG,uBACCO,KAAM,OACNC,MAAST,EACTU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACVC,EAFa,iDAEmCC,UAAUH,GAF7C,oBACH,mCADG,sBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,6CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAIGuB,EDrB0BK,CAAa5B,GAAjCa,EADwB,EAC7BN,KAAae,EADgB,EAChBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDlB,IAEtDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEbpBkB,EAAe,WAAM,MAIM3C,mBAAS,CAAC,WAJhB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEK6C,EAAWrB,KAAI,SAACT,GAAD,OAER,cAAC,EAAD,CAEAA,SAAYA,GADPA,Y,MCnB7B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cd8d3125.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Addcategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2) {\r\n            setCategorias(cat => [inputValue,...cat]);\r\n            setInputValue(' ')\r\n\r\n        }\r\n        // setCategorias\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit= {handleSubmit}>\r\n           <input\r\n            type ='text'\r\n            value = {inputValue}\r\n            onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddcategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const api_key = \"PFGS2f0YJzguLBfyIfM0uUrl8k7GZv1U\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${api_key}&limit=10`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      }\r\n    })\r\n    \r\n    return gifs;\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInDown'>{category}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem \r\n                        key={img.id} \r\n                        {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n    }, [category])\r\n\r\n\r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Addcategory } from './components/Addcategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias =  ['One punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categorias, setCategorias] = useState(['Futbol']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategorias( ['Jurasic',...categorias] );\r\n    //     setCategorias(cat => [...cat, 'Jurasic']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <Addcategory setCategorias={setCategorias} />\r\n            <hr />\r\n            \r\n            <ol>\r\n             {\r\n                 categorias.map((category) => \r\n                    (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category = {category}\r\n                        />\r\n                    )\r\n                 )\r\n             }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n\n"],"sourceRoot":""}